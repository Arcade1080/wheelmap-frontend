{
  "name": "wheelmap-react",
  "displayName": "Wheelmap",
  "version": "4.123.1",
  "homepage": "https://wheelmap.org",
  "repository": "https://github.com/sozialhelden/wheelmap-react-frontend",
  "main": "lib/App.js",
  "license": "MIT",
  "dependencies": {
    "@babel/polyfill": "^7.8.7",
    "@babel/runtime-corejs3": "^7.8.7",
    "@elastic/apm-rum": "^4.9.1",
    "@hypo808/elastic-apm-sourcemap-webpack-plugin": "^1.5.2",
    "@sozialhelden/a11yjson": "^8.2.0",
    "@sozialhelden/fetch-cache": "^2.0.1",
    "@sozialhelden/hamster-cache": "^3.0.0",
    "@sozialhelden/twelve-factor-dotenv": "^15.0.0",
    "acorn-dynamic-import": "^4.0.0",
    "async_hooks": "^1.0.0",
    "browser-image-resizer": "^1.2.0",
    "caniuse-lite": "^1.0.30001035",
    "cheerio": "^0.22.0",
    "classnames": "^2.2.6",
    "compression": "^1.7.3",
    "core-js": "^3.3.5",
    "cors": "^2.8.1",
    "d3-color": "^1.4.0",
    "d3-interpolate": "^1.4.0",
    "d3-scale": "^1.0.6",
    "dotenv": "^4.0.0",
    "ejson": "^2.1.2",
    "elastic-apm-node": "^2.17.3",
    "es6-set": "^0.1.5",
    "es6-symbol": "^3.1.3",
    "event-stream": "^4.0.1",
    "express": "^4.17.1",
    "express-cache-headers": "^0.1.4",
    "fast-levenshtein": "^2.0.6",
    "fibers": "^4.0.2",
    "focus-trap-react": "^6.0.0",
    "focus-visible": "^5.0.2",
    "focus-within": "^2.0.0",
    "full-icu": "^1.3.1",
    "geojson": "^0.5.0",
    "gettext-parser": "^1.3.0",
    "glob": "^5.0.15",
    "http-proxy-middleware": "^1.0.3",
    "https-proxy-agent": "^3.0.1",
    "humanize-string": "^1.0.1",
    "immutable": "^3.8.1",
    "is-url": "^1.2.4",
    "isomorphic-unfetch": "^2.1.1",
    "leaflet": "^1.6.0",
    "leaflet-gesture-handling": "github:sozialhelden/Leaflet.GestureHandling",
    "leaflet-tilelayer-geojson": "^1.0.4",
    "leaflet.markercluster": "^1.0.4",
    "local-storage-fallback": "^4.1.1",
    "lodash": "^4.17.15",
    "marked": "^0.7.0",
    "minimist": "^1.2.5",
    "mkdirp": "^0.5.3",
    "next": "^9.3.1",
    "next-transpile-modules": "^2.3.1",
    "path-to-regexp": "^2.4.0",
    "plist": "^3.0.1",
    "query-string": "^4.3.4",
    "react": "^16.13.0",
    "react-activity": "^1.2.2",
    "react-dom": "^16.13.0",
    "react-ga": "^2.7.0",
    "react-images": "^0.5.17",
    "react-measure": "^2.3.0",
    "react-photo-gallery": "^6.0.25",
    "react-radio-group": "^3.0.3",
    "react-share": "^2.3.1",
    "react-swipeable": "^4.0.1",
    "safe-area-insets": "^1.4.1",
    "styled-components": "^4.4.1",
    "ttag": "^1.7.22",
    "ua-parser-js": "^0.7.21",
    "underscore.string": "^3.3.5",
    "unfetch": "^3.1.2"
  },
  "devDependencies": {
    "@babel/plugin-proposal-optional-chaining": "^7.8.3",
    "@babel/plugin-transform-template-literals": "^7.8.3",
    "@babel/preset-env": "^7.8.7",
    "@svgr/cli": "^4.3.3",
    "@types/chai": "^4.2.11",
    "@types/classnames": "^2.2.10",
    "@types/d3-color": "^1.2.2",
    "@types/d3-interpolate": "^1.3.1",
    "@types/d3-scale": "^2.2.0",
    "@types/geojson": "^7946.0.7",
    "@types/http-proxy-middleware": "^0.19.3",
    "@types/is-url": "^1.2.28",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^5.2.7",
    "@types/node": "^13.9.2",
    "@types/react": "^16.9.23",
    "@types/react-dom": "^16.9.5",
    "@types/react-measure": "^2.0.6",
    "@types/react-radio-group": "^3.0.2",
    "@types/styled-components": "^4.4.3",
    "@types/uuid": "^3.4.8",
    "@typescript-eslint/eslint-plugin": "^2.24.0",
    "@typescript-eslint/parser": "^1.13.0",
    "@zeit/next-css": "^1.0.1",
    "@zeit/next-sass": "^1.0.1",
    "@zeit/next-source-maps": "0.0.3",
    "acorn": "^6.4.1",
    "autoprefixer": "7.1.2",
    "babel-eslint": "^10.1.0",
    "babel-plugin-dynamic-import-node": "^2.3.0",
    "babel-plugin-styled-components": "^1.10.7",
    "babel-plugin-transform-es2015-template-literals": "^6.22.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-ttag": "^1.7.24",
    "browserslist": "^4.9.1",
    "browserstack-local": "^1.4.5",
    "chai": "^4.2.0",
    "chalk": "1.1.3",
    "copyfiles": "^2.2.0",
    "dotenv-cli": "^1.4.0",
    "eslint": "^5.16.0",
    "eslint-config-airbnb-typescript": "^7.2.0",
    "eslint-config-react-app": "^4.0.1",
    "eslint-loader": "^2.2.1",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-react-hooks": "^2.5.1",
    "eslint-plugin-webdriverio": "^1.0.1",
    "fs-extra": "3.0.1",
    "husky": "^1.0.0-rc.13",
    "jest": "^25.1.0",
    "lint-staged": "^8.2.1",
    "next-babel-minify": "^1.0.0",
    "next-runtime-dotenv": "^1.2.0",
    "node-sass": "^4.13.1",
    "nodemon": "^2.0.2",
    "npm": "^6.14.2",
    "npm-force-resolutions": "0.0.3",
    "npmignore": "^0.2.0",
    "postcss-flexbugs-fixes": "3.2.0",
    "postcss-focus-within": "^2.0.0",
    "prettier": "^1.19.1",
    "prettier-eslint": "^8.8.2",
    "prettier-eslint-cli": "^5.0.0",
    "promise": "8.0.1",
    "react-axe": "^2.1.7",
    "rimraf": "^2.7.1",
    "source-map-explorer": "^1.5.0",
    "source-map-loader": "^0.2.4",
    "ts-node": "^8.6.2",
    "typescript": "^3.8.3",
    "url-loader": "^1.1.2"
  },
  "scripts": {
    "dev": "next",
    "build": "rm -rf dist/ && rm -rf .next/ && next build && tsc && npm run copy-files && mv .next dist/",
    "build-client": "rm -rf dist/ && tsc --project tsconfig.client.json && npm run copy-files",
    "start": "pwd; env; cat .env; NODE_ENV=production node --icu-data-dir=node_modules/full-icu dist/server/server.js",
    "copy-files": "copyfiles -u 1 ./src/**/*.css ./dist && copyfiles -u 1 ./src/**/*.scss ./dist",
    "analyze": "source-map-explorer build/static/js/main.*",
    "test": "node scripts/test.js --env=jsdom",
    "deploy-classic-staging": "npm run build-staging && scp -r -P 22022 build/* rails@hulk:/var/apps/wheelmap/staging/shared/public/beta",
    "deploy-classic-production": "npm run build && scp -r -P 22022 build/* rails@spiderman:/var/apps/wheelmap/production/shared/public/beta",
    "push-deploy-tag": "export DEPLOY_TAG=\"deploy-`date \"+%Y-%m-%d_%H-%M-%S\"`\" && git tag $DEPLOY_TAG && git push origin $DEPLOY_TAG",
    "deploy-web": "npm version patch && npm run push-deploy-tag && npx now deploy",
    "push-to-registry": "npm version patch && npm run push-deploy-tag && make push",
    "version": "echo TODO: Add version syncing to bundle configurations for native apps + git commit -am 'Version bump' to package.json",
    "server": "server",
    "push-translations": "npm run clear-babel-cache && (BABEL_ENV=ttag npm run build) && tx push -s",
    "pull-translations": "tx pull -af",
    "retranslate": "npm run build && npm run pull-translations && NEW_SOURCE_PO='./src/public/i18n/en_US.txt' retranslate/run.sh",
    "create-js-translations": "node scripts/parseGettextFiles.js",
    "update-local-translations": "npm run pull-translations && npm run create-js-translations",
    "compile-svg-directory": "echo \"Compiling SVGs in ${basedir}, this can take up to a few minutesâ€¦\"; (for file in ${basedir}/*.svg; do node node_modules/@svgr/cli/bin/svgr --icon $file > ${file/.svg/.tsx}; sed -i '' -e 's/= props/= (props: React.SVGAttributes<{}>)/g' ${file/.svg/.tsx}; echo \"export { default as `basename $file .svg` } from './`basename $file .svg`';\";  done;) > ${basedir}/index.ts",
    "compile-markers": "basedir=src/components/icons/markers npm run compile-svg-directory",
    "compile-equipment-icons": "basedir=src/components/icons/equipment npm run compile-svg-directory",
    "compile-category-icons": "basedir=src/components/icons/categories npm run compile-svg-directory",
    "compile-action-icons": "basedir=src/components/icons/actions npm run compile-svg-directory",
    "compile-ui-icons": "basedir=src/components/icons/ui-elements npm run compile-svg-directory",
    "compile-main-categories": "basedir=src/components/icons/mainCategories npm run compile-svg-directory",
    "compile-svgs": "npm run compile-main-categories && npm run compile-action-icons && npm run compile-category-icons && npm run compile-markers && npm run compile-equipment-icons",
    "compile-merged-svgs": "BABEL_ENV=development babel-node --plugins transform-es2015-modules-commonjs scripts/generate-icons.js && ./node_modules/svgo/bin/svgo --multipass build/icons/*.svg",
    "format": "prettier-eslint --config .prettierrc \"src/**/*.js\" --write",
    "clear-babel-cache": "rimraf -rf ./node_modules/.cache/babel-loader/*"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "{src,test}/**/*.{js,jsx}": [
      "prettier-eslint --write ",
      "git add"
    ]
  },
  "browserslist": [
    "Android > 4.4",
    "UCAndroid >= 11.8",
    "ChromeAndroid >= 67",
    "Firefox >= 44",
    "Samsung >= 4",
    "Chrome >= 49",
    "OperaMobile > 1",
    "Safari >= 9",
    "Edge >= 16",
    "IE >= 11",
    "Opera >= 53",
    "iOS >= 10",
    "last 1 version",
    "> 0.25%",
    "not dead"
  ],
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.js?(x)",
      "<rootDir>/src/**/?(*.)(spec|test).js?(x)"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ]
  },
  "engines": {
    "node": "10.x"
  },
  "resolutions": {
    "https-proxy-agent": "^3.0.0"
  }
}
